{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/caokhaminh/Documents/MY_SOURCE/REACTJS/next-demo/hocs/withLocale.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Error from 'next/error';\nimport { getDisplayName } from 'next/dist/next-server/lib/utils';\nimport { isLocale } from '../config/i18n/type';\nimport { LocaleProvider } from '../context/LocaleContext';\nexport default function (WrappedPage) {\n  const WithLocale = (_ref) => {\n    let {\n      locale\n    } = _ref,\n        pageProps = _objectWithoutProperties(_ref, [\"locale\"]);\n\n    if (!locale) {\n      return /*#__PURE__*/_jsxDEV(Error, {\n        statusCode: 404\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    }\n\n    console.log(locale);\n    return /*#__PURE__*/_jsxDEV(LocaleProvider, {\n      lang: locale,\n      children: /*#__PURE__*/_jsxDEV(WrappedPage, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n\n  WithLocale.getInitialProps = async ctx => {\n    let pageProps = {};\n\n    if (WrappedPage.getInitialProps) {\n      pageProps = await WrappedPage.getInitialProps(ctx);\n    }\n\n    if (typeof ctx.query.lang !== 'string' || !isLocale(ctx.query.lang)) {\n      return _objectSpread(_objectSpread({}, pageProps), {}, {\n        locale: undefined\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, pageProps), {}, {\n      locale: ctx.query.lang\n    });\n  };\n\n  WithLocale.displayName = `withLang(${getDisplayName(WrappedPage)})`;\n  return WithLocale;\n}","map":{"version":3,"sources":["/Users/caokhaminh/Documents/MY_SOURCE/REACTJS/next-demo/hocs/withLocale.js"],"names":["React","Error","getDisplayName","isLocale","LocaleProvider","WrappedPage","WithLocale","locale","pageProps","console","log","getInitialProps","ctx","query","lang","undefined","displayName"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,eAAe,UAAUC,WAAV,EAAuB;AACpC,QAAMC,UAAU,GAAG,UAA8B;AAAA,QAA7B;AAAEC,MAAAA;AAAF,KAA6B;AAAA,QAAhBC,SAAgB;;AAC/C,QAAI,CAACD,MAAL,EAAa;AACX,0BAAO,QAAC,KAAD;AAAO,QAAA,UAAU,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,wBACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,MAAtB;AAAA,6BACE,QAAC,WAAD,oBAAiBC,SAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAVD;;AAYAF,EAAAA,UAAU,CAACK,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACxC,QAAIJ,SAAS,GAAG,EAAhB;;AACA,QAAIH,WAAW,CAACM,eAAhB,EAAiC;AAC/BH,MAAAA,SAAS,GAAG,MAAMH,WAAW,CAACM,eAAZ,CAA4BC,GAA5B,CAAlB;AACD;;AACD,QAAI,OAAOA,GAAG,CAACC,KAAJ,CAAUC,IAAjB,KAA0B,QAA1B,IAAsC,CAACX,QAAQ,CAACS,GAAG,CAACC,KAAJ,CAAUC,IAAX,CAAnD,EAAqE;AACnE,6CAAYN,SAAZ;AAAuBD,QAAAA,MAAM,EAAEQ;AAA/B;AACD;;AACD,2CAAYP,SAAZ;AAAuBD,MAAAA,MAAM,EAAEK,GAAG,CAACC,KAAJ,CAAUC;AAAzC;AACD,GATD;;AAWAR,EAAAA,UAAU,CAACU,WAAX,GAA0B,YAAWd,cAAc,CAACG,WAAD,CAAc,GAAjE;AAEA,SAAOC,UAAP;AACD","sourcesContent":["import React from 'react';\nimport Error from 'next/error';\nimport { getDisplayName } from 'next/dist/next-server/lib/utils';\nimport { isLocale } from '../config/i18n/type';\nimport { LocaleProvider } from '../context/LocaleContext';\n\nexport default function (WrappedPage) {\n  const WithLocale = ({ locale, ...pageProps }) => {\n    if (!locale) {\n      return <Error statusCode={404} />;\n    }\n    console.log(locale);\n    return (\n      <LocaleProvider lang={locale}>\n        <WrappedPage {...pageProps} />\n      </LocaleProvider>\n    );\n  };\n\n  WithLocale.getInitialProps = async ctx => {\n    let pageProps = {};\n    if (WrappedPage.getInitialProps) {\n      pageProps = await WrappedPage.getInitialProps(ctx);\n    }\n    if (typeof ctx.query.lang !== 'string' || !isLocale(ctx.query.lang)) {\n      return { ...pageProps, locale: undefined };\n    }\n    return { ...pageProps, locale: ctx.query.lang };\n  };\n\n  WithLocale.displayName = `withLang(${getDisplayName(WrappedPage)})`;\n\n  return WithLocale;\n}\n"]},"metadata":{},"sourceType":"module"}