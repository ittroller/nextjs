{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/caokhaminh/Documents/MY_SOURCE/REACTJS/next-demo/context/LocaleContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { isLocale } from '../config/i18n/type';\nexport var LocaleContext = /*#__PURE__*/createContext({\n  locale: 'en',\n  setLocale: function setLocale() {\n    return null;\n  }\n});\nexport var LocaleProvider = function LocaleProvider(_ref) {\n  _s();\n\n  var lang = _ref.lang,\n      children = _ref.children;\n\n  var _useState = useState(lang),\n      locale = _useState[0],\n      setLocale = _useState[1];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  useEffect(function () {\n    if (locale !== localStorage.getItem('locale')) {\n      localStorage.setItem('locale', locale);\n    }\n  }, [locale]);\n  useEffect(function () {\n    if (typeof query.lang === 'string' && isLocale(query.lang) && locale !== query.lang) {\n      setLocale(query.lang);\n    }\n  }, [query.lang, locale]);\n  console.log(locale);\n  return /*#__PURE__*/_jsxDEV(LocaleContext.Provider, {\n    value: {\n      locale: locale,\n      setLocale: setLocale\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(LocaleProvider, \"T3FiSf9kLwrtnWfFg5gGcYuWxrU=\", false, function () {\n  return [useRouter];\n});\n\n_c = LocaleProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocaleProvider\");","map":{"version":3,"sources":["/Users/caokhaminh/Documents/MY_SOURCE/REACTJS/next-demo/context/LocaleContext.js"],"names":["React","createContext","useState","useEffect","useRouter","isLocale","LocaleContext","locale","setLocale","LocaleProvider","lang","children","query","localStorage","getItem","setItem","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,IAAMC,aAAa,gBAAGL,aAAa,CAAC;AACzCM,EAAAA,MAAM,EAAE,IADiC;AAEzCC,EAAAA,SAAS,EAAE;AAAA,WAAM,IAAN;AAAA;AAF8B,CAAD,CAAnC;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACxBT,QAAQ,CAACQ,IAAD,CADgB;AAAA,MAC7CH,MAD6C;AAAA,MACrCC,SADqC;;AAAA,mBAElCJ,SAAS,EAFyB;AAAA,MAE5CQ,KAF4C,cAE5CA,KAF4C;;AAIpDT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,MAAM,KAAKM,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf,EAA+C;AAC7CD,MAAAA,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA+BR,MAA/B;AACD;AACF,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,OAAOS,KAAK,CAACF,IAAb,KAAsB,QAAtB,IAAkCL,QAAQ,CAACO,KAAK,CAACF,IAAP,CAA1C,IAA0DH,MAAM,KAAKK,KAAK,CAACF,IAA/E,EAAqF;AACnFF,MAAAA,SAAS,CAACI,KAAK,CAACF,IAAP,CAAT;AACD;AACF,GAJQ,EAIN,CAACE,KAAK,CAACF,IAAP,EAAaH,MAAb,CAJM,CAAT;AAMAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAEA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,SAAS,EAATA;AAAV,KAA/B;AAAA,cAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAnBM;;GAAMF,c;UAEOL,S;;;KAFPK,c","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { isLocale } from '../config/i18n/type';\n\nexport const LocaleContext = createContext({\n  locale: 'en',\n  setLocale: () => null,\n});\n\nexport const LocaleProvider = ({ lang, children }) => {\n  const [locale, setLocale] = useState(lang);\n  const { query } = useRouter();\n\n  useEffect(() => {\n    if (locale !== localStorage.getItem('locale')) {\n      localStorage.setItem('locale', locale);\n    }\n  }, [locale]);\n\n  useEffect(() => {\n    if (typeof query.lang === 'string' && isLocale(query.lang) && locale !== query.lang) {\n      setLocale(query.lang);\n    }\n  }, [query.lang, locale]);\n\n  console.log(locale);\n\n  return <LocaleContext.Provider value={{ locale, setLocale }}>{children}</LocaleContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}